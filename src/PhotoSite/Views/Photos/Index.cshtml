@{
	Layout = "_PhotoLayout";

	string deleteUrl = Url.Action("DeletePhotos", new {
		familyId = Model.FamilyId
	});

	string subTitle = Model.DateLabel;

	if (!string.IsNullOrWhiteSpace(Model.CameraModel))
		subTitle += ", " + Model.CameraModel;
}

@model PhotoSite.Models.Photos_Index_AspModel;

@section Header {
	<div class="header-label">
		<div>@Model.FamilyName - Photos</div>
		<small>@subTitle</small>
	</div>
}

@section Sidebar {
	<div class="sidebar-section collapsible-sidebar-section">
		<a href="/" class="sidebar-section-title">üè† Home Page</a>
	</div>

	<div class="sidebar-section collapsible-sidebar-section">
		<label for="year-collapsible" class="sidebar-section-title">üóìÔ∏è Date Taken</label>
		<input type="checkbox" id="year-collapsible" />

		<div class="collapsible-sidebar-links padding-bottom-halfrem" id="nav">
			@foreach (var year in Model.Sidebar) {
				string yearClass = "sidebar-section inner-sidebar-section";

				if (year.Label == $"{Model.Year}")
					yearClass += " selected-sidebar-section";

				<text>
					<div class="@yearClass">
						<a class="sidebar-section-title" href="@year.Url">@year.Label</a>

						@if (year.Children != null && year.Children.Count > 0) {
							<text>
								<ul>
									@foreach (var month in year.Children) {
										string monthClass = "";

										if (month.Url.EndsWith($"{Model.Year}/{Model.Month}"))
											monthClass = "selected-sidebar-item";

										<text>
											<li class="@monthClass"><a class="month-link" href="@month.Url">@month.Label</a></li>
										</text>
									}
								</ul>
							</text>
						}
					</div>
				</text>
			}
		</div>
	</div>	

	@{
		string cameraModelSectionClass = "sidebar-section collapsible-sidebar-section";

			if (!string.IsNullOrWhiteSpace(Model.CameraModel))
				cameraModelSectionClass += " selected-sidebar-section";
	}

	<div class="@cameraModelSectionClass">
		<label for="camera-model-collapsible" class="sidebar-section-title">üì∑ Camera Model</label>
		<input type="checkbox" id="camera-model-collapsible" />

		<ul class="collapsible-sidebar-links" id="camera-models">
			@{
				string allCameraModelsClass = "";

				if (string.IsNullOrWhiteSpace(Model.CameraModel))
					allCameraModelsClass = "selected-sidebar-item";
			}

			<li class="@allCameraModelsClass">
				<a href="?cameraModel=">All Camera Models</a>
			</li>

			@foreach (var cameraModel in Model.CameraModels) {
				string cameraModelClass = "";

				if (cameraModel == Model.CameraModel)
					cameraModelClass = "selected-sidebar-item";

				<text>
					<li class="@cameraModelClass">
						<a href="?cameraModel=@cameraModel">@cameraModel</a>
					</li>
				</text>
			}
		</ul>
	</div>	

	<div class="sidebar-section collapsible-sidebar-section">
		<a href="/" class="sidebar-section-title">üóëÔ∏è Deleted Items</a>
	</div>
}

@if (Model.Thumbnails.Count == 0) {
	<text>
		<div class="no-photos">No photos were found. Select a different date from the sidebar.</div>
	</text> 
} else {
	<text>
		<section class="photo-date">
			<div class="photo-thumbnails" id="thumbnails">
				@foreach (var thumbnail in Model.Thumbnails) {
					<text>
						<div class="photo-thumbnail" id="@thumbnail.Id" data-background-url="@thumbnail.ThumbnailUrl">
							<a href="@thumbnail.ViewerUrl" target="_blank">&nbsp;</a>

							<input type="checkbox" id="Select_@thumbnail.Id" data-id="@thumbnail.Filename" class="photo-thumbnail-select" />
						</div>
					</text>
				}
			</div>
		</section>
	</text>
}

@section Footer {
	<div class="footer-left">
		<button class="select-all hide-if-disabled" id="unselect-all">‚òê Clear All</button>
		<button class="select-all hide-if-disabled" id="select-all">‚òëÔ∏è Select All</button>
		<button class="requires-selection" id="download-photos">üíæ <span class="hide-on-mobile">&nbsp;Download</span></button>
		<button class="requires-selection" id="delete-photos">üóëÔ∏è <span class="hide-on-mobile">&nbsp;Delete</span></button>
	</div>

	<div class="footer-right">
		<button class="zoom-button" id="zoom-minus">-</button>
		<div class="hide-on-mobile zoom-label">Zoom</div>
		<button class="zoom-button" id="zoom-plus">+</button>
	</div>
}

@section Scripts {
	<script>
		(function() {
			thumbnails.render();

			document.getElementById("select-all").addEventListener("click", function() {
				multiSelect.selectAll();
			});

			document.getElementById("unselect-all").addEventListener("click", function() {
				multiSelect.clearAll();
			});

			document.getElementById("delete-photos").addEventListener("click", function() {
				let photoCount = multiSelect.getSelectedFiles().length,
					s = photoCount > 1 ? "s" : "";

				if (confirm(photoCount + " photo" + s + " will be deleted. Are you sure you want to continue?"))
					deletePhotos(false);
			});

			function deletePhotos(permanent) {
				fetch("@deleteUrl", {
					method: "PUT",
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify({
						fileIds: multiSelect.getSelectedFiles(),
						deletePermanently: permanent
					})
				});

				clearSelectedFiles();
			}

			function clearSelectedFiles() {
				let $checkboxes = multiSelect.getSelectedCheckboxes();

				for (let i = 0; i < $checkboxes.length; i++) {
					clearSelectedFile($checkboxes[i]);
				}

				multiSelect.update();
			}

			function clearSelectedFile($checkbox) {
				let $photo = $checkbox.parentElement;

				$photo.parentElement.removeChild($photo);
			}
		})();
	</script>
}